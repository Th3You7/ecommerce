{"version":3,"sources":["actions/spendingsAction.js","screens/WalletScreen.js"],"names":["url","spendingsAction","dispatch","a","type","SPENDINGS_REQUEST","axios","get","data","SPENDINGS_SUCCESS","payload","SPENDINGS_FAIL","message","addSpendingAction","values","ADD_SPENDING_REQUEST","post","ADD_SPENDING_SUCCESS","ADD_SPENDING_FAIL","currSelSpendingAction","spending","SEL_SPEND","deleteSpendingAction","id","REMOVE_SPENDING_REQUEST","delete","response","REMOVE_SPENDING_SUCCESS","REMOVE_SPENDING_FAIL","resetSpending","RESET_SPENDING","useStyles","makeStyles","theme","container","width","margin","spacing","paper","padding","marginBottom","title","fontWeight","subtitle","color","palette","primary","details","progress","flex","display","justifyContent","alignItems","salesSubtitle","success","salesTitle","fontSize","earningTitle","spendingsSubtitle","error","spendingsTitle","WalletScreen","history","useHistory","classes","useDispatch","useSelector","state","salesReducer","sales","spendings","spendingsReducer","useTheme","useEffect","salesAction","options","credits","enabled","rangeSelector","selected","text","align","style","series","name","map","sale","Date","createdAt","getTime","soldPrice","price","dataGrouping","approximation","forced","groupAll","units","threshold","tooltip","valueDecimals","fillColor","linearGradient","x1","y1","x2","y2","stops","Highcharts","getOptions","colors","setOpacity","darkOptions","chart","backgroundColor","fontFamily","plotBorderColor","textTransform","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","plotOptions","dataLabels","marker","boxplot","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","allSales","reduce","acc","curr","allSpendings","earning","balance","Number","handleBack","push","className","variant","component","value","displayType","thousandSeparator","suffix"],"mappings":"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","file":"static/js/40.f6bf3ee7.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_SPENDING_FAIL,\n  ADD_SPENDING_REQUEST,\n  ADD_SPENDING_SUCCESS,\n  RESET_SPENDING,\n  SPENDINGS_FAIL,\n  SPENDINGS_REQUEST,\n  SPENDINGS_SUCCESS,\n  SEL_SPEND,\n  REMOVE_SPENDING_REQUEST,\n  REMOVE_SPENDING_SUCCESS,\n  REMOVE_SPENDING_FAIL,\n} from \"../constants/spendingConstants\";\n\nconst url = `https://manage-commerce.herokuapp.com`;\n\nconst spendingsAction = () => async (dispatch) => {\n  dispatch({ type: SPENDINGS_REQUEST });\n  try {\n    const { data } = await axios.get(`${url}/api/spending/all`);\n    dispatch({ type: SPENDINGS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: SPENDINGS_FAIL, payload: error.message });\n  }\n};\n\nconst addSpendingAction = (values) => async (dispatch) => {\n  dispatch({ type: ADD_SPENDING_REQUEST });\n  try {\n    const { data } = await axios.post(`${url}/api/spending/add`, values);\n    dispatch({ type: ADD_SPENDING_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: ADD_SPENDING_FAIL, payload: error.message });\n  }\n};\n\nconst currSelSpendingAction = (spending) => (dispatch) => {\n  dispatch({ type: SEL_SPEND, payload: spending });\n};\n\nconst deleteSpendingAction = (id) => async (dispatch) => {\n  dispatch({ type: REMOVE_SPENDING_REQUEST });\n  try {\n    const response = await axios.delete(`${url}/api/spending/delete/${id}`);\n    dispatch({ type: REMOVE_SPENDING_SUCCESS, payload: response });\n  } catch (error) {\n    dispatch({ type: REMOVE_SPENDING_FAIL, payload: error });\n  }\n};\n\nconst resetSpending = () => (dispatch) => {\n  dispatch({ type: RESET_SPENDING });\n};\n\nexport {\n  spendingsAction,\n  addSpendingAction,\n  deleteSpendingAction,\n  currSelSpendingAction,\n  resetSpending,\n};\n","import React, { useEffect } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport { HighChartStock, UpperAppBar } from \"../components\";\nimport Highcharts from \"highcharts/highstock\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { salesAction } from \"../actions/salesAction\";\nimport { spendingsAction } from \"../actions/spendingsAction\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"95%\",\n    margin: theme.spacing(0, \"auto\"),\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n\n  title: {\n    fontWeight: 700,\n  },\n\n  subtitle: {\n    color: theme.palette.primary[\"light\"],\n  },\n\n  details: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n\n  progress: {\n    padding: theme.spacing(2),\n  },\n\n  flex: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n\n  salesSubtitle: {\n    color: theme.palette.success[\"light\"],\n    margin: 0,\n  },\n\n  salesTitle: {\n    // color: theme.palette.success[\"dark\"],\n    fontWeight: 700,\n    fontSize: 22,\n  },\n\n  earningTitle: {\n    color: theme.palette.success[\"dark\"],\n    fontWeight: 700,\n    fontSize: 22,\n  },\n\n  spendingsSubtitle: {\n    color: theme.palette.error[\"light\"],\n    margin: 0,\n  },\n\n  spendingsTitle: {\n    color: theme.palette.error[\"dark\"],\n    fontWeight: 700,\n    fontSize: 22,\n  },\n}));\n\nexport default function WalletScreen() {\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { sales, error } = useSelector((state) => state.salesReducer);\n  const { spendings } = useSelector((state) => state.spendingsReducer);\n  const theme = useTheme();\n\n  useEffect(() => {\n    dispatch(salesAction());\n    dispatch(spendingsAction());\n  }, [dispatch]);\n\n  const handleBack = () => {\n    history.push(\"/admin\");\n  };\n\n  const data = [\n    ...sales.map((sale) => [\n      new Date(sale.createdAt).getTime(),\n      sale.soldPrice - sale.price,\n    ]),\n  ];\n\n  const options = {\n    credits: {\n      enabled: false,\n    },\n    rangeSelector: {\n      selected: 1,\n    },\n    title: {\n      text: \"Earnings\",\n      align: \"left\",\n      style: {\n        fontSize: \"20px\",\n        color: \"#5c5c5c\",\n      },\n    },\n    series: [\n      {\n        name: \"Earning\",\n        data: data,\n        dataGrouping: {\n          approximation: \"sum\",\n          forced: true,\n          groupAll: true,\n          units: [[\"day\", [1]]],\n        },\n        color: \"green\",\n        type: \"areaspline\",\n        threshold: null,\n        tooltip: {\n          valueDecimals: 2,\n        },\n        fillColor: {\n          linearGradient: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 1,\n          },\n          stops: [\n            [1, Highcharts.getOptions().colors[1]],\n            [\n              1,\n              Highcharts.color(Highcharts.getOptions().colors[1])\n                .setOpacity(0)\n                .get(\"rgba\"),\n            ],\n          ],\n        },\n      },\n    ],\n  };\n\n  const darkOptions = {\n    ...options,\n    colors: [\n      \"#2b908f\",\n      \"#90ee7e\",\n      \"#f45b5b\",\n      \"#7798BF\",\n      \"#aaeeee\",\n      \"#ff0066\",\n      \"#eeaaee\",\n      \"#55BF3B\",\n      \"#DF5353\",\n      \"#7798BF\",\n      \"#aaeeee\",\n    ],\n    chart: {\n      backgroundColor: {\n        linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n        stops: [\n          [0, \"#2a2a2b\"],\n          [1, \"#3e3e40\"],\n        ],\n      },\n      style: {\n        fontFamily: \"'Unica One', sans-serif\",\n      },\n      plotBorderColor: \"#606063\",\n    },\n    title: {\n      ...options.title,\n      style: {\n        color: \"#E0E0E3\",\n        textTransform: \"uppercase\",\n        fontSize: \"20px\",\n      },\n    },\n    subtitle: {\n      style: {\n        color: \"#E0E0E3\",\n        textTransform: \"uppercase\",\n      },\n    },\n    xAxis: {\n      gridLineColor: \"#707073\",\n      labels: {\n        style: {\n          color: \"#E0E0E3\",\n        },\n      },\n      lineColor: \"#707073\",\n      minorGridLineColor: \"#505053\",\n      tickColor: \"#707073\",\n      title: {\n        style: {\n          color: \"#A0A0A3\",\n        },\n      },\n    },\n    yAxis: {\n      gridLineColor: \"#707073\",\n      labels: {\n        style: {\n          color: \"#E0E0E3\",\n        },\n      },\n      lineColor: \"#707073\",\n      minorGridLineColor: \"#505053\",\n      tickColor: \"#707073\",\n      tickWidth: 1,\n      title: {\n        style: {\n          color: \"#A0A0A3\",\n        },\n      },\n    },\n    tooltip: {\n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n      style: {\n        color: \"#F0F0F0\",\n      },\n    },\n    plotOptions: {\n      series: {\n        dataLabels: {\n          color: \"#F0F0F3\",\n          style: {\n            fontSize: \"13px\",\n          },\n        },\n        marker: {\n          lineColor: \"#333\",\n        },\n      },\n      boxplot: {\n        fillColor: \"#505053\",\n      },\n      candlestick: {\n        lineColor: \"white\",\n      },\n      errorbar: {\n        color: \"white\",\n      },\n    },\n    legend: {\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      itemStyle: {\n        color: \"#E0E0E3\",\n      },\n      itemHoverStyle: {\n        color: \"#FFF\",\n      },\n      itemHiddenStyle: {\n        color: \"#606063\",\n      },\n      title: {\n        style: {\n          color: \"#C0C0C0\",\n        },\n      },\n    },\n\n    labels: {\n      style: {\n        color: \"#707073\",\n      },\n    },\n    drilldown: {\n      activeAxisLabelStyle: {\n        color: \"#F0F0F3\",\n      },\n      activeDataLabelStyle: {\n        color: \"#F0F0F3\",\n      },\n    },\n    navigation: {\n      buttonOptions: {\n        symbolStroke: \"#DDDDDD\",\n        theme: {\n          fill: \"#505053\",\n        },\n      },\n    },\n    // scroll charts\n    rangeSelector: {\n      ...options.rangeSelector,\n      buttonTheme: {\n        fill: \"#505053\",\n        stroke: \"#000000\",\n        style: {\n          color: \"#CCC\",\n        },\n        states: {\n          hover: {\n            fill: \"#707073\",\n            stroke: \"#000000\",\n            style: {\n              color: \"white\",\n            },\n          },\n          select: {\n            fill: \"#000003\",\n            stroke: \"#000000\",\n            style: {\n              color: \"white\",\n            },\n          },\n        },\n      },\n      inputBoxBorderColor: \"#505053\",\n      inputStyle: {\n        backgroundColor: \"#333\",\n        color: \"silver\",\n      },\n      labelStyle: {\n        color: \"silver\",\n      },\n    },\n    navigator: {\n      handles: {\n        backgroundColor: \"#666\",\n        borderColor: \"#AAA\",\n      },\n      outlineColor: \"#CCC\",\n      maskFill: \"rgba(255,255,255,0.1)\",\n      series: {\n        color: \"#7798BF\",\n        lineColor: \"#A6C7ED\",\n      },\n      xAxis: {\n        gridLineColor: \"#505053\",\n      },\n    },\n    scrollbar: {\n      barBackgroundColor: \"#808083\",\n      barBorderColor: \"#808083\",\n      buttonArrowColor: \"#CCC\",\n      buttonBackgroundColor: \"#606063\",\n      buttonBorderColor: \"#606063\",\n      rifleColor: \"#FFF\",\n      trackBackgroundColor: \"#404043\",\n      trackBorderColor: \"#404043\",\n    },\n  };\n\n  const allSales = sales?.reduce((acc, curr) => acc + curr.soldPrice, 0);\n  const allSpendings = spendings.reduce((acc, curr) => acc + curr.spending, 0);\n  const earning = sales?.reduce(\n    (acc, curr) => acc + (curr.soldPrice - curr.price),\n    0\n  );\n\n  const balance = Number(allSales - allSpendings);\n\n  return (\n    <>\n      <UpperAppBar handleBack={handleBack} />\n      {error && <div>{error}</div>}\n      <div className={classes.container}>\n        <Paper className={classes.paper}>\n          <Typography\n            variant=\"h6\"\n            component=\"h2\"\n            className={classes.subtitle}\n            align=\"center\"\n          >\n            Total Balance\n          </Typography>\n          <Typography variant=\"h5\" component=\"h3\" align=\"center\">\n            <NumberFormat\n              value={balance}\n              displayType={\"text\"}\n              thousandSeparator={true}\n              suffix={\"DH\"}\n              className={classes.title}\n            />\n          </Typography>\n        </Paper>\n        <Paper className={classes.paper}>\n          <div className={classes.flex}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sales\n            </Typography>\n            <Typography className={classes.salesTitle} variant=\"subtitle2\">\n              <NumberFormat\n                value={allSales}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                suffix={\"DH\"}\n\n                //className={classes.title}\n              />\n            </Typography>\n          </div>\n        </Paper>\n        <Paper className={classes.paper}>\n          <div className={classes.flex}>\n            <Typography className={classes.title} variant=\"h6\">\n              Spendings\n            </Typography>\n            {spendings && (\n              <Typography\n                className={classes.spendingsTitle}\n                variant=\"subtitle2\"\n              >\n                <NumberFormat\n                  value={allSpendings}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  suffix={\"DH\"}\n                  //className={classes.title}\n                />\n              </Typography>\n            )}\n          </div>\n        </Paper>\n        <Paper className={classes.paper}>\n          <div className={classes.flex}>\n            <Typography className={classes.title} variant=\"h6\">\n              Earnings\n            </Typography>\n            <Typography className={classes.earningTitle} variant=\"subtitle2\">\n              <NumberFormat\n                value={earning}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                suffix={\"DH\"}\n              />\n            </Typography>\n          </div>\n        </Paper>\n        {/* <Paper className={classes.details}>\n          <Doughnut />\n        </Paper> */}\n\n        <HighChartStock\n          options={theme.palette.type === \"light\" ? options : darkOptions}\n        />\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}